<UserControl x:Class="CodexVS22.MyToolWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:theming="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:util="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Utilities"
             xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
             xmlns:local="clr-namespace:CodexVS22"
             xmlns:toolkit="clr-namespace:Community.VisualStudio.Toolkit;assembly=Community.VisualStudio.Toolkit"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="300"
             Name="MyToolWindow"
             Loaded="OnLoaded"
             Unloaded="OnUnloaded">
    <Grid Background="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBackgroundKey}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Margin="6">
            <DockPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                    <Button Name="LogoutButton"
                            Margin="0,0,6,0"
                            Width="80"
                            Visibility="Collapsed"
                            KeyboardNavigation.TabIndex="7"
                            AutomationProperties.Name="Log out"
                            Click="OnLogoutClick">
                        <AccessText Text="Lo_gout" />
                    </Button>
                    <ToggleButton Name="ExecConsoleToggle"
                                   Width="120"
                                   Margin="0,0,6,0"
                                   KeyboardNavigation.TabIndex="6"
                                   AutomationProperties.Name="Show or hide exec console"
                                   Checked="OnExecConsoleToggleChanged"
                                   Unchecked="OnExecConsoleToggleChanged">
                        <AccessText Text="Exec Co_nsole" />
                    </ToggleButton>
                    <Button Name="CopyAllButton"
                            Width="90"
                            Margin="0,0,6,0"
                            KeyboardNavigation.TabIndex="7"
                            AutomationProperties.Name="Copy entire transcript"
                            Click="OnCopyAllClick">
                        <AccessText Text="Cop_y All" />
                    </Button>
                    <Button Name="ResetApprovalsButton"
                            Width="120"
                            Margin="0,0,6,0"
                            KeyboardNavigation.TabIndex="8"
                            AutomationProperties.Name="Reset approvals"
                            Click="OnResetApprovalsClick">
                        <AccessText Text="Reset _Approvals" />
                    </Button>
                    <Button Width="80"
                            KeyboardNavigation.TabIndex="9"
                            AutomationProperties.Name="Clear transcript"
                            Click="OnClearClick">
                        <AccessText Text="_Clear" />
                    </Button>
                </StackPanel>
                <TextBlock Text="Codex"
                           FontWeight="Bold"
                           Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" />
            </DockPanel>
            <Border Name="McpToolsContainer"
                    Margin="0,6,0,0"
                    Background="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBackgroundKey}}"
                    BorderBrush="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBorderKey}}"
                    BorderThickness="1"
                    CornerRadius="3"
                    Padding="6"
                    Visibility="Collapsed">
                <StackPanel>
                    <DockPanel Margin="0,0,0,4">
                        <TextBlock Text="MCP Tools"
                                   FontWeight="SemiBold"
                                   Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" />
                        <Button Content="_Refresh"
                                Width="80"
                                DockPanel.Dock="Right"
                                AutomationProperties.Name="Refresh MCP tools"
                                Click="OnRefreshMcpToolsClick" />
                    </DockPanel>
                    <StackPanel Name="McpToolsEmptyText"
                                Visibility="Collapsed">
                        <TextBlock Text="No MCP tools available."
                                   Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"
                                   Margin="0,0,0,8" />
                        <TextBlock Text="MCP (Model Context Protocol) servers provide tools and capabilities to Codex."
                                   TextWrapping="Wrap"
                                   Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"
                                   Margin="0,0,0,8" />
                        <TextBlock Text="To configure MCP servers:"
                                   Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"
                                   Margin="0,0,0,4" />
                        <TextBlock Text="1. Create a codex.json file in your project root"
                                   Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"
                                   Margin="16,0,0,2" />
                        <TextBlock Text="2. Add MCP server configurations"
                                   Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"
                                   Margin="16,0,0,2" />
                        <TextBlock Text="3. Restart Codex or refresh tools"
                                   Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"
                                   Margin="16,0,0,8" />
                        <Hyperlink Name="McpHelpLink"
                                   Click="OnMcpHelpClick"
                                   Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}">
                            <Run Text="Learn more about MCP configuration" />
                        </Hyperlink>
                    </StackPanel>
                    <ItemsControl Name="McpToolsList"
                                  Margin="0,4,0,0">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Margin="0,4,0,4"
                                        Padding="8"
                                        Background="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBackgroundKey}}"
                                        BorderBrush="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBorderKey}}"
                                        BorderThickness="1"
                                        CornerRadius="3"
                                        Cursor="Hand"
                                        MouseLeftButtonDown="OnMcpToolClick"
                                        MouseEnter="OnMcpToolMouseEnter"
                                        MouseLeave="OnMcpToolMouseLeave">
                                    <Border.Resources>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarHoverKey}}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Resources>
                                    <StackPanel>
                                        <TextBlock Text="{Binding Name}"
                                                   FontWeight="SemiBold"
                                                   Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" />
                                        <TextBlock Text="{Binding Description}"
                                                   TextWrapping="Wrap"
                                                   Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"
                                                   Margin="0,4,0,0">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                    <Style.Triggers>
                                                        <Trigger Property="Text" Value="">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <TextBlock Text="{Binding Server}"
                                                   Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"
                                                   FontStyle="Italic"
                                                   Margin="0,4,0,0">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                    <Style.Triggers>
                                                        <Trigger Property="Text" Value="">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </Border>
            <Border Name="McpToolRunsContainer"
                    Margin="0,6,0,0"
                    Background="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBackgroundKey}}"
                    BorderBrush="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBorderKey}}"
                    BorderThickness="1"
                    CornerRadius="3"
                    Padding="6"
                    Visibility="Collapsed">
                <StackPanel>
                    <TextBlock Text="Tool Activity"
                               FontWeight="SemiBold"
                               Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" />
                    <ItemsControl Name="McpToolRunsList"
                                  Margin="0,4,0,0">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Margin="0,4,0,4">
                                    <DockPanel>
                                        <TextBlock Text="{Binding ToolName}"
                                                   FontWeight="SemiBold"
                                                   Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" />
                                        <TextBlock Text="{Binding StatusDisplay}"
                                                   DockPanel.Dock="Right"
                                                   FontWeight="SemiBold"
                                                   Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" />
                                    </DockPanel>
                                    <TextBlock Text="{Binding Server}"
                                               FontStyle="Italic"
                                               Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Visibility" Value="Visible" />
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <TextBlock Text="{Binding TimingDisplay}"
                                               Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Visibility" Value="Visible" />
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <TextBlock Text="{Binding Detail}"
                                               TextWrapping="Wrap"
                                               Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Visibility" Value="Visible" />
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </Border>
            <Border Name="CustomPromptsContainer"
                    Margin="0,6,0,0"
                    Background="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBackgroundKey}}"
                    BorderBrush="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBorderKey}}"
                    BorderThickness="1"
                    CornerRadius="3"
                    Padding="6"
                    Visibility="Collapsed">
                <StackPanel>
                    <DockPanel Margin="0,0,0,4">
                        <TextBlock Text="Prompt Library"
                                   FontWeight="SemiBold"
                                   Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" />
                        <Button Content="Re_fresh"
                                Width="80"
                                DockPanel.Dock="Right"
                                AutomationProperties.Name="Refresh prompts"
                                Click="OnRefreshPromptsClick" />
                    </DockPanel>
                    <TextBlock Name="CustomPromptsEmptyText"
                               Text="No saved prompts available."
                               Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"
                               Visibility="Collapsed" />
                    <ItemsControl Name="CustomPromptsList"
                                  Margin="0,4,0,0">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Margin="0,4,0,4"
                                        Padding="8"
                                        Background="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBackgroundKey}}"
                                        BorderBrush="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBorderKey}}"
                                        BorderThickness="1"
                                        CornerRadius="3"
                                        Cursor="Hand"
                                        MouseLeftButtonDown="OnCustomPromptClick"
                                        MouseEnter="OnCustomPromptMouseEnter"
                                        MouseLeave="OnCustomPromptMouseLeave">
                                    <Border.Resources>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarHoverKey}}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Resources>
                                    <StackPanel>
                                        <DockPanel>
                                            <TextBlock Text="{Binding Name}"
                                                       FontWeight="SemiBold"
                                                       Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" />
                                            <TextBlock Text="{Binding SourceDisplay}"
                                                       DockPanel.Dock="Right"
                                                       FontStyle="Italic"
                                                       Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" />
                                        </DockPanel>
                                        <TextBlock Text="{Binding Description}"
                                                   TextWrapping="Wrap"
                                                   Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"
                                                   Margin="0,4,0,0">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                    <Style.Triggers>
                                                        <Trigger Property="Text" Value="">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <TextBlock Name="PromptPreview"
                                                   Text="{Binding Body}"
                                                   TextWrapping="Wrap"
                                                   Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"
                                                   FontStyle="Italic"
                                                   Margin="0,4,0,0"
                                                   MaxHeight="60"
                                                   TextTrimming="CharacterEllipsis"
                                                   Visibility="Collapsed">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <Trigger Property="Text" Value="">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </Border>
            <Border Name="AuthBanner"
                    Margin="0,6,0,0"
                    Background="{DynamicResource {x:Static vsfx:VsBrushes.InfoBackgroundKey}}"
                    BorderBrush="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBorderKey}}"
                    BorderThickness="1"
                    CornerRadius="3"
                    Padding="6"
                    Visibility="Collapsed">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Name="AuthMessage"
                               Grid.Column="0"
                               TextWrapping="Wrap"
                               VerticalAlignment="Center"
                               Foreground="{DynamicResource {x:Static vsfx:VsBrushes.InfoTextKey}}"
                               Text="Codex login required. Click Login to continue." />
                    <Button Name="LoginButton"
                            Grid.Column="1"
                            Width="80"
                            KeyboardNavigation.TabIndex="7"
                            AutomationProperties.Name="Log in"
                            Margin="12,0,0,0"
                            Click="OnLoginClick">
                        <AccessText Text="_Login" />
                    </Button>
                </Grid>
            </Border>
            <Border Name="FullAccessBanner"
                    Margin="0,6,0,0"
                    Background="{DynamicResource {x:Static vsfx:VsBrushes.EnvironmentWarningBackgroundKey}}"
                    BorderBrush="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBorderKey}}"
                    BorderThickness="1"
                    CornerRadius="3"
                    Padding="6"
                    Visibility="Collapsed">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock Name="FullAccessText"
                               VerticalAlignment="Center"
                               Foreground="{DynamicResource {x:Static vsfx:VsBrushes.EnvironmentWarningTextKey}}"
                               TextWrapping="Wrap"
                               Text="Full Access mode is enabled. Codex may auto-approve exec commands and patches." />
                </StackPanel>
            </Border>
            <Border Name="ApprovalPromptBanner"
                    Margin="0,6,0,0"
                    Background="{DynamicResource {x:Static vsfx:VsBrushes.InfoBackgroundKey}}"
                    BorderBrush="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBorderKey}}"
                    BorderThickness="1"
                    CornerRadius="3"
                    Padding="6"
                    Visibility="Collapsed">
                <StackPanel>
                    <TextBlock Name="ApprovalPromptText"
                               TextWrapping="Wrap"
                               Foreground="{DynamicResource {x:Static vsfx:VsBrushes.InfoTextKey}}"
                               Text="Approve request?" />
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,0" VerticalAlignment="Center">
                        <CheckBox Name="ApprovalRememberCheckBox"
                                  Content="Remember this decision for this session"
                                  Margin="0,0,12,0"
                                  Visibility="Collapsed"
                                  VerticalAlignment="Center" />
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Name="ApprovalApproveButton"
                                    Width="80"
                                    Margin="0,0,6,0"
                                    Click="OnApprovalApproveClick">
                                <AccessText Text="_Approve" />
                            </Button>
                            <Button Name="ApprovalDenyButton"
                                    Width="80"
                                    Click="OnApprovalDenyClick">
                                <AccessText Text="_Deny" />
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </Border>
            <StackPanel Orientation="Horizontal" Margin="0,6,0,0" VerticalAlignment="Center">
                <StackPanel Orientation="Horizontal" Margin="0,0,12,0" VerticalAlignment="Center">
                    <Label Content="_Approvals:"
                           Margin="0,0,4,0"
                           VerticalAlignment="Center"
                           Target="{Binding ElementName=ApprovalCombo}"
                           Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" />
                    <ComboBox Name="ApprovalCombo"
                              Width="170"
                              SelectionChanged="OnApprovalModeChanged"
                              VerticalAlignment="Center"
                              KeyboardNavigation.TabIndex="0"
                              AutomationProperties.Name="Approval policy selector">
                        <ComboBoxItem Content="Chat" />
                        <ComboBoxItem Content="Agent" />
                        <ComboBoxItem Content="Agent (Full Access)" />
                    </ComboBox>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,0,12,0" VerticalAlignment="Center">
                    <Label Content="_Model:"
                           Margin="0,0,4,0"
                           VerticalAlignment="Center"
                           Target="{Binding ElementName=ModelCombo}"
                           Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" />
                    <ComboBox Name="ModelCombo"
                              Width="170"
                              SelectionChanged="OnModelSelectionChanged"
                              VerticalAlignment="Center"
                              KeyboardNavigation.TabIndex="1"
                              AutomationProperties.Name="Model selector" />
                </StackPanel>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <Label Content="_Reasoning:"
                           Margin="0,0,4,0"
                           VerticalAlignment="Center"
                           Target="{Binding ElementName=ReasoningCombo}"
                           Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" />
                    <ComboBox Name="ReasoningCombo"
                              Width="140"
                              SelectionChanged="OnReasoningSelectionChanged"
                              VerticalAlignment="Center"
                              KeyboardNavigation.TabIndex="2"
                              AutomationProperties.Name="Reasoning effort selector" />
                </StackPanel>
            </StackPanel>
        </StackPanel>
        <Grid Grid.Row="1" Margin="6">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Border Grid.Row="0"
                    Name="DiffTreeContainer"
                    Visibility="Collapsed"
                    Margin="0,0,0,12"
                    Padding="6"
                    BorderThickness="1"
                    CornerRadius="3"
                    BorderBrush="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBorderKey}}"
                    Background="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBackgroundKey}}">
                <DockPanel LastChildFill="True">
                    <StackPanel DockPanel.Dock="Top"
                                Orientation="Horizontal"
                                VerticalAlignment="Center"
                                Margin="0,0,0,6">
                        <TextBlock Text="Patches"
                                   FontWeight="SemiBold"
                                   Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" />
                        <TextBlock Name="DiffSelectionSummary"
                                   Margin="12,0,0,0"
                                   Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"
                                   Visibility="Collapsed"
                                   AutomationProperties.Name="Selected diff summary" />
                        <Button Name="DiscardPatchButton"
                                Margin="12,0,0,0"
                                Padding="8,0"
                                Visibility="Collapsed"
                                AutomationProperties.Name="Discard Codex patch"
                                Click="OnDiscardPatchClick">
                            <AccessText Text="_Discard Patch" />
                        </Button>
                    </StackPanel>
                    <ScrollViewer MaxHeight="220"
                                  VerticalScrollBarVisibility="Auto"
                                  HorizontalScrollBarVisibility="Disabled"
                                  AutomationProperties.Name="Diff file selection">
                        <TreeView Name="DiffTreeView"
                                  AutomationProperties.Name="Diff tree">
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="TreeViewItem">
                                    <Setter Property="IsExpanded"
                                            Value="{Binding IsExpanded, Mode=TwoWay}" />
                                </Style>
                            </TreeView.ItemContainerStyle>
                            <TreeView.Resources>
                                <HierarchicalDataTemplate DataType="{x:Type local:MyToolWindowControl.DiffTreeItem}"
                                                         ItemsSource="{Binding Children}">
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox IsThreeState="True"
                                                  Margin="0,0,6,0"
                                                  VerticalAlignment="Center"
                                                  IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  Click="OnDiffTreeCheckBoxClick"
                                                  AutomationProperties.Name="{Binding RelativePath}" />
                                        <TextBlock Text="{Binding Name}"
                                                   VerticalAlignment="Center"
                                                   Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" />
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                            </TreeView.Resources>
                        </TreeView>
                    </ScrollViewer>
                </DockPanel>
            </Border>
            <ScrollViewer x:Name="TranscriptScrollViewer"
                          Grid.Row="1"
                          VerticalScrollBarVisibility="Auto"
                          HorizontalScrollBarVisibility="Disabled"
                          Background="Transparent"
                          AutomationProperties.Name="Chat transcript"
                          AutomationProperties.AutomationId="TranscriptViewer">
                <StackPanel Name="Transcript"
                            HorizontalAlignment="Stretch">
                    <TextBlock Text="Welcome to Codex for Visual Studio"
                               Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" />
                </StackPanel>
            </ScrollViewer>
        </Grid>
        <Grid Grid.Row="2" Margin="6">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Grid.Row="0"
                    Name="StreamErrorBanner"
                    Background="{DynamicResource {x:Static vsfx:VsBrushes.InfoBackgroundKey}}"
                    BorderBrush="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBorderKey}}"
                    BorderThickness="1"
                    CornerRadius="3"
                    Padding="6"
                    Visibility="Collapsed"
                    Margin="0,0,0,6">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock Name="StreamErrorText"
                               VerticalAlignment="Center"
                               AutomationProperties.Name="Streaming error message"
                               Foreground="{DynamicResource {x:Static vsfx:VsBrushes.InfoTextKey}}"
                               Text="Stream error" />
                    <Button Name="StreamRetryButton"
                            Width="60"
                            Margin="12,0,0,0"
                            KeyboardNavigation.TabIndex="8"
                            AutomationProperties.Name="Retry streaming"
                            Click="OnStreamRetryClick">
                        <AccessText Text="_Retry" />
                    </Button>
                    <Button Width="70"
                            Margin="6,0,0,0"
                            KeyboardNavigation.TabIndex="9"
                            AutomationProperties.Name="Dismiss streaming error"
                            Click="OnStreamDismissClick">
                        <AccessText Text="_Dismiss" />
                    </Button>
                </StackPanel>
            </Border>
            <DockPanel Grid.Row="1">
                <Label Content="_Message:"
                       DockPanel.Dock="Left"
                       VerticalAlignment="Center"
                       Margin="0,0,8,0"
                       Target="{Binding ElementName=InputBox}"
                       Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" />
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" VerticalAlignment="Center">
                    <TextBlock Name="TokenUsageText"
                               VerticalAlignment="Center"
                               Margin="0,0,8,0"
                               Visibility="Collapsed"
                               Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" />
                    <TextBlock Name="TelemetryText"
                               VerticalAlignment="Center"
                               Margin="0,0,8,0"
                               Visibility="Collapsed"
                               Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"
                               AutomationProperties.Name="Session telemetry" />
                    <ProgressBar Name="StreamingIndicator"
                                 Width="80"
                                 Height="6"
                                 Margin="0,0,8,0"
                                 IsIndeterminate="True"
                                 Visibility="Collapsed"
                                 AutomationProperties.Name="Streaming in progress indicator" />
                    <TextBlock Name="StatusText"
                               VerticalAlignment="Center"
                               Margin="0,0,8,0"
                               Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" />
                    <Button Name="SendButton"
                            Width="80"
                            Height="28"
                            Margin="4,0,0,0"
                            KeyboardNavigation.TabIndex="3"
                            AutomationProperties.Name="Send message"
                            Click="OnSendClick">
                        <AccessText Text="_Send" />
                    </Button>
                </StackPanel>
                <TextBox Name="InputBox"
                         AcceptsReturn="True"
                         MinHeight="60"
                         TextWrapping="Wrap"
                         PreviewKeyDown="OnInputPreviewKeyDown"
                         Background="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBackgroundKey}}"
                         Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"
                         KeyboardNavigation.TabIndex="2"
                         AutomationProperties.Name="Chat message input"
                         BorderBrush="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBorderKey}}" />
            </DockPanel>
        </Grid>
    </Grid>
</UserControl>
