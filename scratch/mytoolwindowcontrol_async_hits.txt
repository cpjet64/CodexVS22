ToolWindows/MyToolWindowControl.WorkingDirectory.Helpers.cs:145:    private static async Task<string> SafeInvokeAsync(Func<Task<string>> resolver)
ToolWindows/MyToolWindowControl.WorkingDirectory.Helpers.cs:164:    private static async Task<(string, string)> SafeInvokeTupleAsync(Func<Task<(string, string)>> resolver)
ToolWindows/MyToolWindowControl.Transcript.cs:18:    private async void OnCopyAllClick(object sender, RoutedEventArgs e)
ToolWindows/MyToolWindowControl.WorkingDirectory.Environment.cs:24:    private async Task<IVsSolution> GetSolutionServiceAsync()
ToolWindows/MyToolWindowControl.WorkingDirectory.Environment.cs:35:    private async Task<string> GetSolutionDirectoryFromServiceAsync()
ToolWindows/MyToolWindowControl.WorkingDirectory.Environment.cs:62:    private async Task<(string Directory, string File)> GetSolutionInfoAsync()
ToolWindows/MyToolWindowControl.WorkingDirectory.Environment.cs:87:    private async Task<string> GetSolutionRootDirectoryAsync()
ToolWindows/MyToolWindowControl.WorkingDirectory.Environment.cs:128:    internal static async Task<EnvironmentSnapshot> CaptureEnvironmentSnapshotAsync(CancellationToken ct)
ToolWindows/MyToolWindowControl.WorkingDirectory.Environment.cs:188:    private static async Task<string> GetFolderWorkspaceRootAsync()
ToolWindows/MyToolWindowControl.WorkingDirectory.SolutionEvents.cs:11:    private async Task CleanupSolutionSubscriptionsAsync()
ToolWindows/MyToolWindowControl.WorkingDirectory.Selection.cs:140:    private static async Task<SolutionItem> SafeGetCurrentSolutionAsync()
ToolWindows/MyToolWindowControl.WorkingDirectory.Selection.cs:152:    private static async Task<SolutionItem> GetActiveProjectAsync()
ToolWindows/MyToolWindowControl.WorkingDirectory.Selection.cs:178:    private static async Task<IReadOnlyList<SolutionItem>> GetActiveSolutionItemsAsync()
ToolWindows/MyToolWindowControl.WorkingDirectory.Subscriptions.cs:16:    private async Task AdviseSolutionEventsAsync()
ToolWindows/MyToolWindowControl.WorkingDirectory.Subscriptions.cs:38:    private async Task UnadviseSolutionEventsAsync()
ToolWindows/MyToolWindowControl.WorkingDirectory.Subscriptions.cs:62:    private async Task SubscribeUiContextsAsync()
ToolWindows/MyToolWindowControl.WorkingDirectory.Subscriptions.cs:86:    private async Task UnsubscribeUiContextsAsync()
ToolWindows/MyToolWindowControl.WorkingDirectory.Subscriptions.cs:105:      _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => await EnsureWorkingDirectoryUpToDateAsync(reason));
ToolWindows/MyToolWindowControl.WorkingDirectory.Subscriptions.cs:108:    private async Task EnsureWorkingDirectoryUpToDateAsync(string reason)
ToolWindows/MyToolWindowControl.WorkingDirectory.Subscriptions.cs:143:    private async Task OnSolutionReadyAsync(string path)
ToolWindows/MyToolWindowControl.WorkingDirectory.Subscriptions.cs:156:    private async Task OnWorkspaceReadyAsync(string path)
ToolWindows/MyToolWindowControl.WorkingDirectory.Subscriptions.cs:176:      _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () =>
ToolWindows/MyToolWindowControl.WorkingDirectory.Subscriptions.cs:189:      _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () =>
ToolWindows/MyToolWindowControl.WorkingDirectory.Subscriptions.cs:199:    private async Task OnSolutionFullyLoadedAsync()
ToolWindows/MyToolWindowControl.WorkingDirectory.Subscriptions.cs:214:    private async Task OnFolderWorkspaceReadyAsync()
ToolWindows/MyToolWindowControl.WorkingDirectory.cs:17:    private async Task RefreshWorkingDirectoryAsync(string reason)
ToolWindows/MyToolWindowControl.WorkingDirectory.cs:22:    private async Task<string> DetermineInitialWorkingDirectoryAsync()
ToolWindows/MyToolWindowControl.WorkingDirectory.cs:34:    private async Task<WorkingDirectoryResolution> ResolveWorkingDirectoryAsync()
ToolWindows/MyToolWindowControl.WorkingDirectory.cs:97:    private async Task LogWorkingDirectoryResolutionAsync(string reason, WorkingDirectoryResolution resolution, string previous, bool includeCandidates)
ToolWindows/MyToolWindowControl.xaml.cs:737:    private async Task<bool> RestartCliAsync()
ToolWindows/MyToolWindowControl.xaml.cs:813:    private async void HandleAgentMessageDelta(EventMsg evt)
ToolWindows/MyToolWindowControl.xaml.cs:893:    private async void HandleAgentMessage(EventMsg evt)
ToolWindows/MyToolWindowControl.xaml.cs:1029:    private async void HandleTokenCount(EventMsg evt)
ToolWindows/MyToolWindowControl.xaml.cs:1105:    private async void HandleStreamError(EventMsg evt)
ToolWindows/MyToolWindowControl.xaml.cs:1241:    private async void HandleApplyPatchApproval(EventMsg evt)
ToolWindows/MyToolWindowControl.xaml.cs:1409:    private async void HandlePatchApplyBegin(EventMsg evt)
ToolWindows/MyToolWindowControl.xaml.cs:1473:    private async void HandlePatchApplyEnd(EventMsg evt)
ToolWindows/MyToolWindowControl.xaml.cs:1545:    private async void HandleTaskComplete(EventMsg evt)
ToolWindows/MyToolWindowControl.xaml.cs:1661:          _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => await RequestMcpToolsAsync("session-configured"));
ToolWindows/MyToolWindowControl.xaml.cs:1665:          _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => await RequestCustomPromptsAsync("session-configured"));
ToolWindows/MyToolWindowControl.xaml.cs:3285:    private async Task<bool> TryDiscardPendingPatchAsync()
ToolWindows/MyToolWindowControl.xaml.cs:3465:    private async Task DiscardPatchAsync()
ToolWindows/MyToolWindowControl.xaml.cs:3609:    private async void OnDiscardPatchClick(object sender, RoutedEventArgs e)
ToolWindows/MyToolWindowControl.xaml.cs:3661:    private async Task BeginPatchApplyProgressAsync(string summary, int totalFiles)
ToolWindows/MyToolWindowControl.xaml.cs:3797:    private async Task CompletePatchApplyProgressAsync(bool success, int applied, int failed, string messageOverride = null, bool recordTelemetry = true)
ToolWindows/MyToolWindowControl.xaml.cs:4065:    private async Task<bool> ApplySelectedDiffsAsync()
ToolWindows/MyToolWindowControl.xaml.cs:4473:    private async Task<PatchApplyResult> ApplyDocumentTextAsync(string fullPath, DiffDocument document, bool openDocument)
ToolWindows/MyToolWindowControl.xaml.cs:5117:    private static async Task LogPatchReadOnlyAsync(string path)
ToolWindows/MyToolWindowControl.xaml.cs:5169:    private async void OnExecCancelClick(object sender, RoutedEventArgs e)
ToolWindows/MyToolWindowControl.xaml.cs:5297:    private async void OnExecCopyAllClick(object sender, RoutedEventArgs e)
ToolWindows/MyToolWindowControl.xaml.cs:5429:    private async void OnExecClearClick(object sender, RoutedEventArgs e)
ToolWindows/MyToolWindowControl.xaml.cs:5613:        _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => 
ToolWindows/MyToolWindowControl.xaml.cs:5645:      _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => await RequestMcpToolsAsync("user-refresh"));
ToolWindows/MyToolWindowControl.xaml.cs:5709:        _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => 
ToolWindows/MyToolWindowControl.xaml.cs:5749:        _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => 
ToolWindows/MyToolWindowControl.xaml.cs:5809:        _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => 
ToolWindows/MyToolWindowControl.xaml.cs:5841:      _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => await RequestCustomPromptsAsync("user-refresh"));
ToolWindows/MyToolWindowControl.xaml.cs:5969:              _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () =>
ToolWindows/MyToolWindowControl.xaml.cs:6004:              _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () =>
ToolWindows/MyToolWindowControl.xaml.cs:6056:        _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => 
ToolWindows/MyToolWindowControl.xaml.cs:6120:        _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () =>
ToolWindows/MyToolWindowControl.xaml.cs:6155:        _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () =>
ToolWindows/MyToolWindowControl.xaml.cs:6195:        _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => 
ToolWindows/MyToolWindowControl.xaml.cs:6223:        _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => 
ToolWindows/MyToolWindowControl.xaml.cs:6283:        _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => 
ToolWindows/MyToolWindowControl.xaml.cs:6359:        _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => 
ToolWindows/MyToolWindowControl.xaml.cs:6555:    private async void OnExecExportClick(object sender, RoutedEventArgs e)
ToolWindows/MyToolWindowControl.xaml.cs:7027:    private async Task ShowDiffAsync(DiffDocument doc)
ToolWindows/MyToolWindowControl.xaml.cs:7295:    private async Task UpdateFullAccessBannerAsync()
ToolWindows/MyToolWindowControl.xaml.cs:7843:    private async Task RequestMcpToolsAsync(string reason)
ToolWindows/MyToolWindowControl.xaml.cs:7971:    private async Task RequestCustomPromptsAsync(string reason)
ToolWindows/MyToolWindowControl.xaml.cs:9475:    private async void OnCopyMessageMenuItemClick(object sender, RoutedEventArgs e)
ToolWindows/MyToolWindowControl.xaml.cs:12111:      _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => await SendUserInputAsync(box?.Text, fromRetry: false));
ToolWindows/MyToolWindowControl.xaml.cs:12123:    private async void OnSendClick(object sender, RoutedEventArgs e)
ToolWindows/MyToolWindowControl.xaml.cs:12179:    private async Task SendUserInputAsync(string text, bool fromRetry)
ToolWindows/MyToolWindowControl.xaml.cs:12387:    private async Task<bool> SendExecCancelAsync(string execId)
ToolWindows/MyToolWindowControl.xaml.cs:12543:      _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => await SendUserInputAsync(text, fromRetry: true));
ToolWindows/MyToolWindowControl.xaml.cs:12659:    private static async Task LogAssistantTextAsync(string text)
ToolWindows/MyToolWindowControl.xaml.cs:12727:    private static async Task LogTelemetryAsync(string eventName, Dictionary<string, object> properties = null)
ToolWindows/MyToolWindowControl.xaml.cs:12791:    private static async Task WriteExecDiagnosticsAsync(string text)
ToolWindows/MyToolWindowControl.Exec.cs:18:    private async void HandleExecApproval(EventMsg evt)
ToolWindows/MyToolWindowControl.Exec.cs:67:    private async void HandleExecCommandBegin(EventMsg evt)
ToolWindows/MyToolWindowControl.Exec.cs:127:    private async void HandleExecCommandOutputDelta(EventMsg evt)
ToolWindows/MyToolWindowControl.Exec.cs:163:    private async void HandleExecCommandEnd(EventMsg evt)
ToolWindows/MyToolWindowControl.Authentication.cs:15:    private async Task UpdateAuthenticationStateAsync(
ToolWindows/MyToolWindowControl.Authentication.cs:28:    private async Task RefreshAuthUiAsync()
ToolWindows/MyToolWindowControl.Authentication.cs:84:    private async Task HandleAuthenticationResultAsync(
ToolWindows/MyToolWindowControl.Authentication.cs:120:    private async void OnLoginClick(object sender, RoutedEventArgs e)
ToolWindows/MyToolWindowControl.Authentication.cs:161:    private async void OnLogoutClick(object sender, RoutedEventArgs e)
ToolWindows/MyToolWindowControl.Authentication.cs:202:    private async void HandleStderr(string line)
ToolWindows/MyToolWindowControl.Heartbeat.cs:73:        _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () =>
ToolWindows/MyToolWindowControl.Heartbeat.cs:113:        _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () =>
ToolWindows/MyToolWindowControl.Heartbeat.cs:146:      _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () =>
ToolWindows/MyToolWindowControl.Heartbeat.cs:159:    private async Task SendHeartbeatAsync(CodexCliHost host, HeartbeatState state)
ToolWindows/MyToolWindowControl.Lifecycle.cs:48:    private static async Task<EnvironmentSnapshot> WaitForEnvironmentReadyAsync()
ToolWindows/MyToolWindowControl.Lifecycle.cs:60:      ThreadHelper.JoinableTaskFactory.Run(async () =>
ToolWindows/MyToolWindowControl.Lifecycle.cs:66:    private async Task OnLoadedAsync(object sender, RoutedEventArgs e)
ToolWindows/MyToolWindowControl.Lifecycle.cs:115:      _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => await RequestMcpToolsAsync("tool-window-loaded"));
ToolWindows/MyToolWindowControl.Lifecycle.cs:116:      _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => await RequestCustomPromptsAsync("tool-window-loaded"));
ToolWindows/MyToolWindowControl.Lifecycle.cs:122:      _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => await CleanupSolutionSubscriptionsAsync());
ToolWindows/MyToolWindowControl.Options.cs:14:    private async Task InitializeSelectorsAsync()
ToolWindows/MyToolWindowControl.Options.cs:56:    private async Task RestoreLastUsedItemsAsync()
ToolWindows/MyToolWindowControl.Options.cs:87:        _ = ThreadHelper.JoinableTaskFactory.RunAsync(async () => 
ToolWindows/MyToolWindowControl.Options.cs:182:      ThreadHelper.JoinableTaskFactory.RunAsync(async () =>
ToolWindows/MyToolWindowControl.Mcp.cs:19:    private async void HandleListMcpTools(EventMsg evt)
ToolWindows/MyToolWindowControl.Mcp.cs:42:    private async void HandleListCustomPrompts(EventMsg evt)
ToolWindows/MyToolWindowControl.Mcp.cs:69:    private async void HandleToolCallBegin(EventMsg evt)
ToolWindows/MyToolWindowControl.Mcp.cs:97:    private async void HandleToolCallOutput(EventMsg evt)
ToolWindows/MyToolWindowControl.Mcp.cs:122:    private async void HandleToolCallEnd(EventMsg evt)
ToolWindows/MyToolWindowControl.Mcp.cs:152:    private async void HandleTurnDiff(EventMsg evt)
ToolWindows/MyToolWindowControl.Mcp.cs:187:    private async Task UpdateDiffTreeAsync(IReadOnlyList<DiffDocument> docs)
ToolWindows/MyToolWindowControl.Mcp.cs:232:    private async Task<List<DiffDocument>> ProcessDiffDocumentsAsync(IReadOnlyList<DiffDocument> docs)
ToolWindows/MyToolWindowControl.Approvals.cs:17:    private async void OnResetApprovalsClick(object sender, RoutedEventArgs e)
ToolWindows/MyToolWindowControl.Approvals.cs:40:      ThreadHelper.JoinableTaskFactory.RunAsync(async () => await ResolveActiveApprovalAsync(true));
ToolWindows/MyToolWindowControl.Approvals.cs:45:      ThreadHelper.JoinableTaskFactory.RunAsync(async () => await ResolveActiveApprovalAsync(false));
ToolWindows/MyToolWindowControl.Approvals.cs:70:    private async Task DisplayNextApprovalAsync()
ToolWindows/MyToolWindowControl.Approvals.cs:114:    private async Task ResolveActiveApprovalAsync(bool approved)
ToolWindows/MyToolWindowControl.Approvals.cs:171:      ThreadHelper.JoinableTaskFactory.RunAsync(async () =>
ToolWindows/MyToolWindowControl.Approvals.cs:231:    private static async Task LogAutoApprovalAsync(string kind, string signature, bool approved, string reason)
ToolWindows/MyToolWindowControl.Approvals.cs:247:    private static async Task LogManualApprovalAsync(string kind, string signature, bool approved)
